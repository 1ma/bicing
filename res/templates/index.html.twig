<!doctype html>
<html lang="ca">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <title>Ocupació Bicing</title>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/metrics-graphics/2.11.0/metricsgraphics.css" rel="stylesheet" type="text/css">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/4.10.0/d3.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/metrics-graphics/2.11.0/metricsgraphics.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.js"></script>

    <style>
        #map {
            margin-left: 25%; margin-right: 25%; height: 400px;
        }

        #graph {
            margin-left: 20%; margin-right: 20%; margin-top: 3%;
        }
    </style>
</head>
<body>
<div id="container">
    <h1>Ocupació Bicing</h1>
    <div id="map"></div>
    <div id="graph"></div>
</div>
<script async defer src="https://maps.googleapis.com/maps/api/js?key={{ ga_key }}&callback=initMap"></script>
<script>
let map = {};

const bcn = {lat: 41.39805, lng: 2.180087 };

function after(timestamp) {
    return row => timestamp < parseInt(row.timestamp);
}

function inferCapacity(capacity, row) {
    const candidate = parseInt(row.bikes) + parseInt(row.slots);

    if (candidate > capacity) {
        return candidate;
    }

    return capacity;
}

function printGraph(data, oldestDate, title, target) {
    const limit = data.reduce(inferCapacity, 0);

    const cleanData = data
        .filter(after(oldestDate))
        .map(row => ({date: new Date(row.timestamp*1000), value: parseInt(row.bikes)}));

    MG.data_graphic({
        title: title,
        data: cleanData,
        full_width: true,
        height: 400,
        color: '#E3001B',
        baselines: [{value: limit, label: `capacitat: ${limit} places`}],
        right: 4,
        target: target
    });
}

function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
        zoom: 14,
        center: bcn
    });

    d3.tsv('stations', function(data) {
        data.forEach(function (row) {
            new google.maps.Marker({
                map: map,
                position: {
                    lat: parseFloat(row.lat),
                    lng: parseFloat(row.lng)
                }
            }).addListener('click', function () {
                d3.tsv(`stations/${row.id}`, function(data) {
                    printGraph(data, moment().subtract(1, 'day').unix(), row.address, '#graph');
                });
            });
        });
    });
}
</script>
</body>
</html>
